<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 展示前端数据json格式,字符编码utf-8-->
  	<mvc:annotation-driven >
       <mvc:message-converters register-defaults="true">
       		<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
		    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		    <!-- <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> spring-3.x用这个-->
		    	<property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
		    </bean>  
		    <bean class="org.springframework.http.converter.StringHttpMessageConverter">      
			    <property name="supportedMediaTypes">
				    <list>
				    	<value>text/html;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
				    </list>
			    </property>
		    </bean>
		    <bean id="fastJsonHttpMessageConverter" class="com.learningms.util.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
						</list>
					</property>
				</bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 1.配置springmvc扫描器，用于扫描springmvc注解，此处需要用到context标签， 所以需要添加context的文档声明 -->
	<context:component-scan base-package="com.learningms.*.controller" />

	<!-- 2.配置视图解析器，Controller层处理完请求之后会返回数据或者视图，所以我们需要先添加视图解析器， 否则无法跳转回前台页面 , 
		对模型视图名称的解析，即在模型视图名称添加前后缀 (说白了就是请求返回的路径) -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/pages/" p:suffix=".jsp" />
	
	<!-- 要执行的类	 -->
	<bean id="jobExecuter" class="com.learningms.system.service.impl.JobExecuter" />
	
	<!-- 每分钟执行task -->		 
	<bean id="everyMinuteTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		 
		<property name="targetObject">
			<ref bean="jobExecuter" />
		</property>
		 
		<property name="targetMethod">
			<value>everyMinute</value>
		</property>
	</bean>
	
	<!--  每分钟执行表达式 -->
	<bean id="erverMinuteTime"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="everyMinuteTask" />
		</property>
		 
		<property name="cronExpression">
			<value>0 */5 * * * ?</value>
		</property>
		 
	</bean>
	
	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序   -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="erverMinuteTime"/>
			</list>
		</property>
	</bean>	
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.learningms.util.SecurityInterceptor">
				<!-- 不需要权限验证的地址 -->
				<property name="excludeUrls">
					<list>
						<value>/login/login</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
